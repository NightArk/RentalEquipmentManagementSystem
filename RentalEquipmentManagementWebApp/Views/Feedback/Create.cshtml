@model RentalEquipmentManagementWebApp.Models.ViewModels.CreateFeedbackViewModel
@{
    ViewData["Title"] = "Write Feedback";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Write Feedback for @Model.EquipmentName</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="EquipmentName" class="control-label">Equipment</label>
                <input asp-for="EquipmentName" class="form-control" readonly />
                <input type="hidden" asp-for="EquipmentId" value="@Model.EquipmentId" />
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label">Comment</label>
                <textarea asp-for="Comment" class="form-control"></textarea>
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label">Rating (1-5)</label>
                <input asp-for="Rating" class="form-control" type="number" min="1" max="5" required />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit Feedback" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-equipmentId="@Model.EquipmentId">Back to Feedback</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}