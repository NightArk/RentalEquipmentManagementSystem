@model RentalEquipmentManagementWebApp.Models.Admin.AdminDashboardViewModel
@{
    ViewData["Title"] = "Detailed Dashboard";
}

<div class="container-fluid">
    <h1 class="mt-4 mb-4">Detailed Dashboard</h1>

    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Rental Request Status</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:300px;">
                        <canvas id="requestStatusChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        @foreach (var status in Model.RequestStatusCounts)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle" style="color: @GetStatusColor(status.Key)"></i> @status.Key: @status.Value
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Equipment Status</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:300px;">
                        <canvas id="equipmentStatusChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        @foreach (var status in Model.EquipmentStatusCounts)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle" style="color: @GetEquipmentStatusColor(status.Key)"></i> @status.Key: @status.Value
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Category Distribution</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:300px;">
                        <canvas id="categoryDistributionChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Financial Summary</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <div class="card bg-success text-white shadow">
                                <div class="card-body">
                                    Total Revenue
                                    <div class="text-white-50 small">$@Model.FinancialSummary.TotalRevenue.ToString("N2")</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="card bg-warning text-white shadow">
                                <div class="card-body">
                                    Pending Payments
                                    <div class="text-white-50 small">$@Model.FinancialSummary.PendingPayments.ToString("N2")</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="card bg-info text-white shadow">
                                <div class="card-body">
                                    Additional Charges
                                    <div class="text-white-50 small">$@Model.FinancialSummary.AdditionalCharges.ToString("N2")</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="card bg-primary text-white shadow">
                                <div class="card-body">
                                    Net Revenue
                                    <div class="text-white-50 small">$@Model.FinancialSummary.NetRevenue.ToString("N2")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Transactions</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Customer</th>
                                    <th>Equipment</th>
                                    <th>Rental Date</th>
                                    <th>Due Date</th>
                                    <th>Payment Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.RecentTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Id</td>
                                        <td>@transaction.CustomerName</td>
                                        <td>@transaction.EquipmentName</td>
                                        <td>@transaction.RentalDate?.ToString("d")</td>
                                        <td>@transaction.DueDate?.ToString("d")</td>
                                        <td>
                                            <span class="badge @GetPaymentStatusBadgeClass(transaction.PaymentStatus)">
                                                @transaction.PaymentStatus
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Request Status Chart
            var requestStatusCtx = document.getElementById('requestStatusChart').getContext('2d');
            var requestStatusChart = new Chart(requestStatusCtx, {
                type: 'pie',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.RequestStatusCounts.Keys.Select(k => $"'{k}'")))],
                    datasets: [{
                        data: [@string.Join(",", Model.RequestStatusCounts.Values)],
                        backgroundColor: [
                            '#4e73df', // Primary
                            '#1cc88a', // Success
                            '#e74a3b', // Danger
                            '#f6c23e', // Warning
                        ],
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        }
                    }
                }
            });

            // Equipment Status Chart
            var equipmentStatusCtx = document.getElementById('equipmentStatusChart').getContext('2d');
            var equipmentStatusChart = new Chart(equipmentStatusCtx, {
                type: 'pie',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.EquipmentStatusCounts.Keys.Select(k => $"'{k}'")))],
                    datasets: [{
                        data: [@string.Join(",", Model.EquipmentStatusCounts.Values)],
                        backgroundColor: [
                            '#1cc88a', // Success - Available
                            '#4e73df', // Primary - Rented
                            '#f6c23e', // Warning - Maintenance
                            '#e74a3b', // Danger - Damaged
                        ],
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        }
                    }
                }
            });

            // Category Distribution Chart
            var categoryDistributionCtx = document.getElementById('categoryDistributionChart').getContext('2d');
            var categoryDistributionChart = new Chart(categoryDistributionCtx, {
                type: 'bar',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.CategoryDistribution.Select(c => $"'{c.CategoryName}'")))],
                    datasets: [{
                        label: 'Equipment Count',
                        data: [@string.Join(",", Model.CategoryDistribution.Select(c => c.EquipmentCount))],
                        backgroundColor: '#36b9cc',
                        borderColor: '#2c9faf',
                        borderWidth: 1
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        });
    </script>
}

@functions {
    public string GetStatusColor(string status)
    {
        return status switch
        {
            "Pending" => "#f6c23e", // Warning
            "Approved" => "#1cc88a", // Success
            "Rejected" => "#e74a3b", // Danger
            "Completed" => "#4e73df", // Primary
            _ => "#858796" // Secondary
        };
    }

    public string GetEquipmentStatusColor(string status)
    {
        return status switch
        {
            "Available" => "#1cc88a", // Success
            "Rented" => "#4e73df", // Primary
            "Maintenance" => "#f6c23e", // Warning
            "Damaged" => "#e74a3b", // Danger
            _ => "#858796" // Secondary
        };
    }

    public string GetPaymentStatusBadgeClass(string status)
    {
        return status switch
        {
            "Paid" => "bg-success",
            "Pending" => "bg-warning text-dark",
            "Overdue" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
